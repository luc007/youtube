<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-11-11T16:23:22 EST" name="Default suite" finished-at="2020-11-11T16:24:46 EST" duration-ms="83611">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.google.youtube.runner.YouTubeRunner@6d4e5011]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2020-11-11T16:23:22 EST" name="Default test" finished-at="2020-11-11T16:24:46 EST" duration-ms="83611">
      <class name="com.google.youtube.runner.YouTubeRunner">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:com.google.youtube.runner.YouTubeRunner@6d4e5011]" started-at="2020-11-11T16:23:22 EST" name="setUpClass" finished-at="2020-11-11T16:23:23 EST" duration-ms="417" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.google.youtube.runner.YouTubeRunner@6d4e5011]" started-at="2020-11-11T16:23:23 EST" name="setUp" finished-at="2020-11-11T16:23:44 EST" duration-ms="21354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.google.youtube.runner.YouTubeRunner@6d4e5011]" started-at="2020-11-11T16:23:44 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-11-11T16:24:01 EST" duration-ms="17030" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Youtube search and play Minios movie"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[YouTube Demo]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.google.youtube.runner.YouTubeRunner@6d4e5011]" started-at="2020-11-11T16:24:01 EST" name="tearDown" finished-at="2020-11-11T16:24:03 EST" duration-ms="2140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.google.youtube.runner.YouTubeRunner@6d4e5011]" started-at="2020-11-11T16:24:03 EST" name="setUp" finished-at="2020-11-11T16:24:25 EST" duration-ms="21779" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.google.youtube.runner.YouTubeRunner@6d4e5011]" started-at="2020-11-11T16:24:25 EST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-11-11T16:24:44 EST" duration-ms="18616" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Youtube search and save to playlist"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[YouTube Demo]"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step "verify "Minios 2015" in playlist" is undefined. You can implement it using the snippet(s) below:

@Then("verify {string} in playlist")
public void verify_in_playlist(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step "verify "Minios 2015" in playlist" is undefined. You can implement it using the snippet(s) below:

@Then("verify {string} in playlist")
public void verify_in_playlist(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:102)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$0(TestNGCucumberRunner.java:117)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:117)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:113)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:31)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.google.youtube.runner.YouTubeRunner@6d4e5011]" started-at="2020-11-11T16:24:44 EST" name="tearDown" finished-at="2020-11-11T16:24:46 EST" duration-ms="2134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:com.google.youtube.runner.YouTubeRunner@6d4e5011]" started-at="2020-11-11T16:24:46 EST" name="tearDownClass" finished-at="2020-11-11T16:24:46 EST" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.google.youtube.runner.YouTubeRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
